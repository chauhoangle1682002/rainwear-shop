{"ast":null,"code":"// userAPI.js\nimport axiosInstance from './axiosInstance';\n\n// Hàm đăng nhập\nexport const login = async credentials => {\n  try {\n    const response = await axiosInstance.post('/auth/login', credentials);\n    return response.data;\n  } catch (error) {\n    var _error$response, _error$response$data;\n    throw new Error(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Đăng nhập thất bại. Vui lòng thử lại.');\n  }\n};\n\n// Thêm hàm đăng ký\nexport const register = async userData => {\n  try {\n    const response = await axiosInstance.post('/auth/register', userData);\n    return response.data;\n  } catch (error) {\n    var _error$response2, _error$response2$data;\n    throw new Error(((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || 'Đăng ký thất bại. Vui lòng thử lại.');\n  }\n};\n\n// Kiểm tra trạng thái đăng nhập\nexport const checkAuthStatus = async () => {\n  try {\n    const response = await axiosInstance.get('/auth/status');\n    return response.data.isAuthenticated;\n  } catch (error) {\n    return false;\n  }\n};\n\n// Quên mật khẩu\nexport const forgotPassword = async email => {\n  try {\n    const response = await axiosInstance.post('/auth/forgot-password', {\n      email\n    });\n    return response.data;\n  } catch (error) {\n    var _error$response3, _error$response3$data;\n    throw new Error(((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.message) || 'Gửi yêu cầu thất bại. Vui lòng thử lại.');\n  }\n};\n\n// Reset mật khẩu\nexport const resetPassword = async (token, newPassword) => {\n  try {\n    const response = await axiosInstance.post('/auth/reset-password', {\n      token,\n      newPassword\n    });\n    return response.data;\n  } catch (error) {\n    var _error$response4, _error$response4$data;\n    throw new Error(((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : (_error$response4$data = _error$response4.data) === null || _error$response4$data === void 0 ? void 0 : _error$response4$data.message) || 'Reset mật khẩu thất bại. Vui lòng thử lại.');\n  }\n};\n\n// Đăng xuất\nexport const logout = async () => {\n  try {\n    const response = await axiosInstance.post('/auth/logout');\n    localStorage.removeItem('token'); // Xóa token từ localStorage\n    return response.data;\n  } catch (error) {\n    var _error$response5, _error$response5$data;\n    throw new Error(((_error$response5 = error.response) === null || _error$response5 === void 0 ? void 0 : (_error$response5$data = _error$response5.data) === null || _error$response5$data === void 0 ? void 0 : _error$response5$data.message) || 'Đăng xuất thất bại. Vui lòng thử lại.');\n  }\n};\n\n// Cập nhật thông tin user\nexport const updateProfile = async userData => {\n  try {\n    const response = await axiosInstance.put('/auth/profile', userData);\n    return response.data;\n  } catch (error) {\n    var _error$response6, _error$response6$data;\n    throw new Error(((_error$response6 = error.response) === null || _error$response6 === void 0 ? void 0 : (_error$response6$data = _error$response6.data) === null || _error$response6$data === void 0 ? void 0 : _error$response6$data.message) || 'Cập nhật thông tin thất bại. Vui lòng thử lại.');\n  }\n};\n\n// Đổi mật khẩu\nexport const changePassword = async passwords => {\n  try {\n    const response = await axiosInstance.post('/auth/change-password', passwords);\n    return response.data;\n  } catch (error) {\n    var _error$response7, _error$response7$data;\n    throw new Error(((_error$response7 = error.response) === null || _error$response7 === void 0 ? void 0 : (_error$response7$data = _error$response7.data) === null || _error$response7$data === void 0 ? void 0 : _error$response7$data.message) || 'Đổi mật khẩu thất bại. Vui lòng thử lại.');\n  }\n};","map":{"version":3,"names":["axiosInstance","login","credentials","response","post","data","error","_error$response","_error$response$data","Error","message","register","userData","_error$response2","_error$response2$data","checkAuthStatus","get","isAuthenticated","forgotPassword","email","_error$response3","_error$response3$data","resetPassword","token","newPassword","_error$response4","_error$response4$data","logout","localStorage","removeItem","_error$response5","_error$response5$data","updateProfile","put","_error$response6","_error$response6$data","changePassword","passwords","_error$response7","_error$response7$data"],"sources":["D:/Reactjs/rainwear-shop/frontend/src/api/userAPI.js"],"sourcesContent":["// userAPI.js\r\nimport axiosInstance from './axiosInstance';\r\n\r\n// Hàm đăng nhập\r\nexport const login = async (credentials) => {\r\n  try {\r\n    const response = await axiosInstance.post('/auth/login', credentials);\r\n    return response.data;\r\n  } catch (error) {\r\n    throw new Error(\r\n      error.response?.data?.message || \r\n      'Đăng nhập thất bại. Vui lòng thử lại.'\r\n    );\r\n  }\r\n};\r\n\r\n// Thêm hàm đăng ký\r\nexport const register = async (userData) => {\r\n  try {\r\n    const response = await axiosInstance.post('/auth/register', userData);\r\n    return response.data;\r\n  } catch (error) {\r\n    throw new Error(\r\n      error.response?.data?.message || \r\n      'Đăng ký thất bại. Vui lòng thử lại.'\r\n    );\r\n  }\r\n};\r\n\r\n// Kiểm tra trạng thái đăng nhập\r\nexport const checkAuthStatus = async () => {\r\n  try {\r\n    const response = await axiosInstance.get('/auth/status');\r\n    return response.data.isAuthenticated;\r\n  } catch (error) {\r\n    return false;\r\n  }\r\n};\r\n\r\n// Quên mật khẩu\r\nexport const forgotPassword = async (email) => {\r\n  try {\r\n    const response = await axiosInstance.post('/auth/forgot-password', { email });\r\n    return response.data;\r\n  } catch (error) {\r\n    throw new Error(\r\n      error.response?.data?.message || \r\n      'Gửi yêu cầu thất bại. Vui lòng thử lại.'\r\n    );\r\n  }\r\n};\r\n\r\n// Reset mật khẩu\r\nexport const resetPassword = async (token, newPassword) => {\r\n  try {\r\n    const response = await axiosInstance.post('/auth/reset-password', {\r\n      token,\r\n      newPassword\r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    throw new Error(\r\n      error.response?.data?.message || \r\n      'Reset mật khẩu thất bại. Vui lòng thử lại.'\r\n    );\r\n  }\r\n};\r\n\r\n// Đăng xuất\r\nexport const logout = async () => {\r\n  try {\r\n    const response = await axiosInstance.post('/auth/logout');\r\n    localStorage.removeItem('token'); // Xóa token từ localStorage\r\n    return response.data;\r\n  } catch (error) {\r\n    throw new Error(\r\n      error.response?.data?.message || \r\n      'Đăng xuất thất bại. Vui lòng thử lại.'\r\n    );\r\n  }\r\n};\r\n\r\n// Cập nhật thông tin user\r\nexport const updateProfile = async (userData) => {\r\n  try {\r\n    const response = await axiosInstance.put('/auth/profile', userData);\r\n    return response.data;\r\n  } catch (error) {\r\n    throw new Error(\r\n      error.response?.data?.message || \r\n      'Cập nhật thông tin thất bại. Vui lòng thử lại.'\r\n    );\r\n  }\r\n};\r\n\r\n// Đổi mật khẩu\r\nexport const changePassword = async (passwords) => {\r\n  try {\r\n    const response = await axiosInstance.post('/auth/change-password', passwords);\r\n    return response.data;\r\n  } catch (error) {\r\n    throw new Error(\r\n      error.response?.data?.message || \r\n      'Đổi mật khẩu thất bại. Vui lòng thử lại.'\r\n    );\r\n  }\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}