{"ast":null,"code":"import axiosInstance from './axiosInstance';\nexport const register = async userData => {\n  try {\n    console.log('Sending register request:', userData);\n    const response = await axiosInstance.post('/users/register', userData);\n    console.log('Register response:', response.data);\n    return response.data;\n  } catch (error) {\n    console.error('Register error:', error);\n    if (error.response) {\n      throw error.response.data;\n    } else if (error.request) {\n      throw {\n        message: 'Không nhận được phản hồi từ server'\n      };\n    } else {\n      throw {\n        message: 'Lỗi kết nối server'\n      };\n    }\n  }\n};\nexport const login = async (emailOrPhone, password) => {\n  try {\n    console.log('Sending login request:', {\n      emailOrPhone\n    });\n    const response = await axiosInstance.post('/users/login', {\n      emailOrPhone,\n      password\n    });\n    console.log('Login response:', response.data);\n    if (response.data.success && response.data.accessToken) {\n      // Lưu token vào localStorage\n      localStorage.setItem('token', response.data.accessToken);\n      if (response.data.user) {\n        localStorage.setItem('user', JSON.stringify(response.data.user));\n      }\n    }\n    return response.data;\n  } catch (error) {\n    console.error('Login error:', error);\n    if (error.response) {\n      // Server trả về lỗi với status code\n      throw error.response.data;\n    } else if (error.request) {\n      // Request được gửi nhưng không nhận được response\n      throw {\n        message: 'Không nhận được phản hồi từ server'\n      };\n    } else {\n      // Lỗi khi setting up request\n      throw {\n        message: 'Lỗi kết nối server'\n      };\n    }\n  }\n};\nexport const getProfile = async () => {\n  try {\n    console.log('Sending get profile request');\n    const token = localStorage.getItem('token');\n    if (!token) {\n      throw {\n        message: 'Không tìm thấy token xác thực'\n      };\n    }\n    const response = await axiosInstance.get('/users/profile');\n    console.log('Profile response:', response.data);\n    return response.data;\n  } catch (error) {\n    console.error('Get profile error:', error);\n    if (error.response) {\n      if (error.response.status === 401) {\n        // Token hết hạn hoặc không hợp lệ\n        localStorage.removeItem('token');\n        localStorage.removeItem('user');\n        throw {\n          message: 'Phiên đăng nhập đã hết hạn'\n        };\n      }\n      throw error.response.data;\n    } else if (error.request) {\n      throw {\n        message: 'Không nhận được phản hồi từ server'\n      };\n    } else {\n      throw {\n        message: 'Lỗi kết nối server'\n      };\n    }\n  }\n};\nexport const logout = () => {\n  try {\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    return {\n      success: true,\n      message: 'Đăng xuất thành công'\n    };\n  } catch (error) {\n    console.error('Logout error:', error);\n    throw {\n      message: 'Lỗi khi đăng xuất'\n    };\n  }\n};\n\n// Hàm kiểm tra trạng thái đăng nhập\nexport const checkAuthStatus = () => {\n  const token = localStorage.getItem('token');\n  const user = localStorage.getItem('user');\n  if (token && user) {\n    try {\n      return {\n        isAuthenticated: true,\n        user: JSON.parse(user)\n      };\n    } catch (error) {\n      console.error('Parse user error:', error);\n      localStorage.removeItem('token');\n      localStorage.removeItem('user');\n    }\n  }\n  return {\n    isAuthenticated: false,\n    user: null\n  };\n};\n\n// Hàm refresh token (nếu cần)\nexport const refreshToken = async () => {\n  try {\n    const response = await axiosInstance.post('/users/refresh-token');\n    console.log('Refresh token response:', response.data);\n    if (response.data.success && response.data.accessToken) {\n      localStorage.setItem('token', response.data.accessToken);\n    }\n    return response.data;\n  } catch (error) {\n    var _error$response, _error$response2;\n    console.error('Refresh token error:', error);\n    if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {\n      // Token hết hạn hoặc không hợp lệ\n      localStorage.removeItem('token');\n      localStorage.removeItem('user');\n      throw {\n        message: 'Phiên đăng nhập đã hết hạn'\n      };\n    }\n    throw ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data) || {\n      message: 'Lỗi khi làm mới token'\n    };\n  }\n};","map":{"version":3,"names":["axiosInstance","register","userData","console","log","response","post","data","error","request","message","login","emailOrPhone","password","success","accessToken","localStorage","setItem","user","JSON","stringify","getProfile","token","getItem","get","status","removeItem","logout","checkAuthStatus","isAuthenticated","parse","refreshToken","_error$response","_error$response2"],"sources":["D:/Reactjs/rainwear-shop/frontend/src/api/userAPI.js"],"sourcesContent":["import axiosInstance from './axiosInstance';\r\n\r\nexport const register = async (userData) => {\r\n  try {\r\n    console.log('Sending register request:', userData);\r\n    const response = await axiosInstance.post('/users/register', userData);\r\n    console.log('Register response:', response.data);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Register error:', error);\r\n    if (error.response) {\r\n      throw error.response.data;\r\n    } else if (error.request) {\r\n      throw { message: 'Không nhận được phản hồi từ server' };\r\n    } else {\r\n      throw { message: 'Lỗi kết nối server' };\r\n    }\r\n  }\r\n};\r\n\r\nexport const login = async (emailOrPhone, password) => {\r\n  try {\r\n    console.log('Sending login request:', { emailOrPhone });\r\n    const response = await axiosInstance.post('/users/login', {\r\n      emailOrPhone,\r\n      password\r\n    });\r\n    console.log('Login response:', response.data);\r\n    \r\n    if (response.data.success && response.data.accessToken) {\r\n      // Lưu token vào localStorage\r\n      localStorage.setItem('token', response.data.accessToken);\r\n      if (response.data.user) {\r\n        localStorage.setItem('user', JSON.stringify(response.data.user));\r\n      }\r\n    }\r\n    \r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Login error:', error);\r\n    if (error.response) {\r\n      // Server trả về lỗi với status code\r\n      throw error.response.data;\r\n    } else if (error.request) {\r\n      // Request được gửi nhưng không nhận được response\r\n      throw { message: 'Không nhận được phản hồi từ server' };\r\n    } else {\r\n      // Lỗi khi setting up request\r\n      throw { message: 'Lỗi kết nối server' };\r\n    }\r\n  }\r\n};\r\n\r\nexport const getProfile = async () => {\r\n  try {\r\n    console.log('Sending get profile request');\r\n    const token = localStorage.getItem('token');\r\n    \r\n    if (!token) {\r\n      throw { message: 'Không tìm thấy token xác thực' };\r\n    }\r\n\r\n    const response = await axiosInstance.get('/users/profile');\r\n    console.log('Profile response:', response.data);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Get profile error:', error);\r\n    if (error.response) {\r\n      if (error.response.status === 401) {\r\n        // Token hết hạn hoặc không hợp lệ\r\n        localStorage.removeItem('token');\r\n        localStorage.removeItem('user');\r\n        throw { message: 'Phiên đăng nhập đã hết hạn' };\r\n      }\r\n      throw error.response.data;\r\n    } else if (error.request) {\r\n      throw { message: 'Không nhận được phản hồi từ server' };\r\n    } else {\r\n      throw { message: 'Lỗi kết nối server' };\r\n    }\r\n  }\r\n};\r\n\r\nexport const logout = () => {\r\n  try {\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('user');\r\n    return { success: true, message: 'Đăng xuất thành công' };\r\n  } catch (error) {\r\n    console.error('Logout error:', error);\r\n    throw { message: 'Lỗi khi đăng xuất' };\r\n  }\r\n};\r\n\r\n// Hàm kiểm tra trạng thái đăng nhập\r\nexport const checkAuthStatus = () => {\r\n  const token = localStorage.getItem('token');\r\n  const user = localStorage.getItem('user');\r\n  \r\n  if (token && user) {\r\n    try {\r\n      return {\r\n        isAuthenticated: true,\r\n        user: JSON.parse(user)\r\n      };\r\n    } catch (error) {\r\n      console.error('Parse user error:', error);\r\n      localStorage.removeItem('token');\r\n      localStorage.removeItem('user');\r\n    }\r\n  }\r\n  \r\n  return {\r\n    isAuthenticated: false,\r\n    user: null\r\n  };\r\n};\r\n\r\n// Hàm refresh token (nếu cần)\r\nexport const refreshToken = async () => {\r\n  try {\r\n    const response = await axiosInstance.post('/users/refresh-token');\r\n    console.log('Refresh token response:', response.data);\r\n    \r\n    if (response.data.success && response.data.accessToken) {\r\n      localStorage.setItem('token', response.data.accessToken);\r\n    }\r\n    \r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Refresh token error:', error);\r\n    if (error.response?.status === 401) {\r\n      // Token hết hạn hoặc không hợp lệ\r\n      localStorage.removeItem('token');\r\n      localStorage.removeItem('user');\r\n      throw { message: 'Phiên đăng nhập đã hết hạn' };\r\n    }\r\n    throw error.response?.data || { message: 'Lỗi khi làm mới token' };\r\n  }\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}