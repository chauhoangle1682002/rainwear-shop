{"ast":null,"code":"import axios from 'axios';\nconst BASE_URL = 'http://localhost:5001/api';\nconst axiosInstance = axios.create({\n  baseURL: BASE_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  },\n  timeout: 10000 // 10 seconds timeout\n});\n\n// Request interceptor\naxiosInstance.interceptors.request.use(config => {\n  console.log('Making request to:', config.url);\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n\n  // Add timestamp to prevent caching\n  config.params = {\n    ...config.params,\n    _t: Date.now()\n  };\n  return config;\n}, error => {\n  console.error('Request error:', error);\n  return Promise.reject(error);\n});\n\n// Response interceptor\naxiosInstance.interceptors.response.use(response => {\n  console.log('Response received:', {\n    url: response.config.url,\n    status: response.status,\n    data: response.data\n  });\n  return response;\n}, async error => {\n  var _error$response, _error$response2, _error$response2$data, _error$response3;\n  const originalRequest = error.config;\n  console.error('API Error:', {\n    url: originalRequest.url,\n    status: (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status,\n    message: ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || error.message\n  });\n\n  // Handle 401 Unauthorized error\n  if (((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.status) === 401 && !originalRequest._retry) {\n    originalRequest._retry = true;\n    try {\n      // Try to refresh token\n      const refreshToken = localStorage.getItem('refreshToken');\n      if (refreshToken) {\n        console.log('Attempting to refresh token');\n        const response = await axios.post(`${BASE_URL}/users/refresh-token`, {\n          refreshToken\n        });\n        if (response.data.accessToken) {\n          console.log('Token refreshed successfully');\n          localStorage.setItem('token', response.data.accessToken);\n          axiosInstance.defaults.headers.common['Authorization'] = `Bearer ${response.data.accessToken}`;\n\n          // Retry original request with new token\n          originalRequest.headers['Authorization'] = `Bearer ${response.data.accessToken}`;\n          return axiosInstance(originalRequest);\n        }\n      }\n    } catch (refreshError) {\n      console.error('Token refresh failed:', refreshError);\n\n      // Clear auth data on refresh token failure\n      localStorage.removeItem('token');\n      localStorage.removeItem('refreshToken');\n      localStorage.removeItem('user');\n\n      // Redirect to login page\n      window.location.href = '/login';\n    }\n  }\n\n  // Handle network errors\n  if (!error.response) {\n    return Promise.reject({\n      message: 'Không thể kết nối đến server. Vui lòng kiểm tra kết nối mạng.'\n    });\n  }\n\n  // Handle specific status codes\n  switch (error.response.status) {\n    case 400:\n      return Promise.reject({\n        message: error.response.data.message || 'Yêu cầu không hợp lệ'\n      });\n    case 401:\n      return Promise.reject({\n        message: 'Phiên đăng nhập đã hết hạn. Vui lòng đăng nhập lại.'\n      });\n    case 403:\n      return Promise.reject({\n        message: 'Bạn không có quyền truy cập tài nguyên này'\n      });\n    case 404:\n      return Promise.reject({\n        message: 'Không tìm thấy tài nguyên yêu cầu'\n      });\n    case 500:\n      return Promise.reject({\n        message: 'Lỗi server. Vui lòng thử lại sau.'\n      });\n    default:\n      return Promise.reject({\n        message: error.response.data.message || 'Có lỗi xảy ra'\n      });\n  }\n});\n\n// Add a method to check if token exists\naxiosInstance.hasAuthToken = () => {\n  return !!localStorage.getItem('token');\n};\n\n// Add a method to clear auth data\naxiosInstance.clearAuthData = () => {\n  localStorage.removeItem('token');\n  localStorage.removeItem('refreshToken');\n  localStorage.removeItem('user');\n};\nexport default axiosInstance;","map":{"version":3,"names":["axios","BASE_URL","axiosInstance","create","baseURL","headers","timeout","interceptors","request","use","config","console","log","url","token","localStorage","getItem","Authorization","params","_t","Date","now","error","Promise","reject","response","status","data","_error$response","_error$response2","_error$response2$data","_error$response3","originalRequest","message","_retry","refreshToken","post","accessToken","setItem","defaults","common","refreshError","removeItem","window","location","href","hasAuthToken","clearAuthData"],"sources":["D:/Reactjs/rainwear-shop/frontend/src/api/axiosInstance.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst BASE_URL = 'http://localhost:5001/api';\r\n\r\nconst axiosInstance = axios.create({\r\n  baseURL: BASE_URL,\r\n  headers: {\r\n    'Content-Type': 'application/json'\r\n  },\r\n  timeout: 10000 // 10 seconds timeout\r\n});\r\n\r\n// Request interceptor\r\naxiosInstance.interceptors.request.use(\r\n  (config) => {\r\n    console.log('Making request to:', config.url);\r\n    \r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      config.headers.Authorization = `Bearer ${token}`;\r\n    }\r\n    \r\n    // Add timestamp to prevent caching\r\n    config.params = {\r\n      ...config.params,\r\n      _t: Date.now()\r\n    };\r\n\r\n    return config;\r\n  },\r\n  (error) => {\r\n    console.error('Request error:', error);\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Response interceptor\r\naxiosInstance.interceptors.response.use(\r\n  (response) => {\r\n    console.log('Response received:', {\r\n      url: response.config.url,\r\n      status: response.status,\r\n      data: response.data\r\n    });\r\n    return response;\r\n  },\r\n  async (error) => {\r\n    const originalRequest = error.config;\r\n\r\n    console.error('API Error:', {\r\n      url: originalRequest.url,\r\n      status: error.response?.status,\r\n      message: error.response?.data?.message || error.message\r\n    });\r\n\r\n    // Handle 401 Unauthorized error\r\n    if (error.response?.status === 401 && !originalRequest._retry) {\r\n      originalRequest._retry = true;\r\n\r\n      try {\r\n        // Try to refresh token\r\n        const refreshToken = localStorage.getItem('refreshToken');\r\n        if (refreshToken) {\r\n          console.log('Attempting to refresh token');\r\n          \r\n          const response = await axios.post(`${BASE_URL}/users/refresh-token`, {\r\n            refreshToken\r\n          });\r\n\r\n          if (response.data.accessToken) {\r\n            console.log('Token refreshed successfully');\r\n            \r\n            localStorage.setItem('token', response.data.accessToken);\r\n            axiosInstance.defaults.headers.common['Authorization'] = \r\n              `Bearer ${response.data.accessToken}`;\r\n            \r\n            // Retry original request with new token\r\n            originalRequest.headers['Authorization'] = \r\n              `Bearer ${response.data.accessToken}`;\r\n            return axiosInstance(originalRequest);\r\n          }\r\n        }\r\n      } catch (refreshError) {\r\n        console.error('Token refresh failed:', refreshError);\r\n        \r\n        // Clear auth data on refresh token failure\r\n        localStorage.removeItem('token');\r\n        localStorage.removeItem('refreshToken');\r\n        localStorage.removeItem('user');\r\n\r\n        // Redirect to login page\r\n        window.location.href = '/login';\r\n      }\r\n    }\r\n\r\n    // Handle network errors\r\n    if (!error.response) {\r\n      return Promise.reject({\r\n        message: 'Không thể kết nối đến server. Vui lòng kiểm tra kết nối mạng.'\r\n      });\r\n    }\r\n\r\n    // Handle specific status codes\r\n    switch (error.response.status) {\r\n      case 400:\r\n        return Promise.reject({\r\n          message: error.response.data.message || 'Yêu cầu không hợp lệ'\r\n        });\r\n      case 401:\r\n        return Promise.reject({\r\n          message: 'Phiên đăng nhập đã hết hạn. Vui lòng đăng nhập lại.'\r\n        });\r\n      case 403:\r\n        return Promise.reject({\r\n          message: 'Bạn không có quyền truy cập tài nguyên này'\r\n        });\r\n      case 404:\r\n        return Promise.reject({\r\n          message: 'Không tìm thấy tài nguyên yêu cầu'\r\n        });\r\n      case 500:\r\n        return Promise.reject({\r\n          message: 'Lỗi server. Vui lòng thử lại sau.'\r\n        });\r\n      default:\r\n        return Promise.reject({\r\n          message: error.response.data.message || 'Có lỗi xảy ra'\r\n        });\r\n    }\r\n  }\r\n);\r\n\r\n// Add a method to check if token exists\r\naxiosInstance.hasAuthToken = () => {\r\n  return !!localStorage.getItem('token');\r\n};\r\n\r\n// Add a method to clear auth data\r\naxiosInstance.clearAuthData = () => {\r\n  localStorage.removeItem('token');\r\n  localStorage.removeItem('refreshToken');\r\n  localStorage.removeItem('user');\r\n};\r\n\r\nexport default axiosInstance;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}