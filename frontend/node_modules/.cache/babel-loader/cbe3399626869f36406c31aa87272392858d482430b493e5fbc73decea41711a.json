{"ast":null,"code":"var _jsxFileName = \"D:\\\\Reactjs\\\\rainwear-shop\\\\frontend\\\\src\\\\services\\\\productService.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { createContext, useContext, useState, useEffect } from 'react';\n\n// Tạo Context cho ProductService\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProductContext = /*#__PURE__*/createContext();\n\n// Provider quản lý sản phẩm\nexport const ProductProvider = ({\n  children\n}) => {\n  _s();\n  const [categories, setCategories] = useState({}); // Chứa tất cả các danh mục sản phẩm từ API\n  const [products, setProducts] = useState({}); // Chứa tất cả sản phẩm từ tất cả danh mục\n  const [loading, setLoading] = useState(true); // Đang tải dữ liệu\n  const [error, setError] = useState(null); // Lỗi khi gọi API\n\n  // Lấy danh sách sản phẩm từ API backend\n  useEffect(() => {\n    const fetchProducts = async () => {\n      try {\n        setLoading(true);\n        setError(null);\n        const response = await fetch('http://localhost:5000/api/products'); // URL API sản phẩm\n        if (!response.ok) {\n          throw new Error('Không thể tải danh sách sản phẩm.');\n        }\n        const data = await response.json();\n        setCategories(data); // Lưu các danh mục vào trạng thái categories\n        setProducts(data); // Lưu sản phẩm vào trạng thái products\n      } catch (err) {\n        setError(err.message || 'Không thể tải danh sách sản phẩm.'); // Nếu có lỗi, hiển thị thông báo lỗi\n      } finally {\n        setLoading(false); // Xong việc, cập nhật trạng thái loading\n      }\n    };\n    fetchProducts();\n  }, []); // useEffect chạy một lần khi component mount\n\n  return /*#__PURE__*/_jsxDEV(ProductContext.Provider, {\n    value: {\n      products,\n      categories,\n      loading,\n      error\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n\n// Custom hook để sử dụng ProductContext\n_s(ProductProvider, \"Hl03SfEuLj+XZWsR+NrPqhLgPRA=\");\n_c = ProductProvider;\nexport const useProduct = () => {\n  _s2();\n  return useContext(ProductContext);\n};\n_s2(useProduct, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"ProductProvider\");","map":{"version":3,"names":["createContext","useContext","useState","useEffect","jsxDEV","_jsxDEV","ProductContext","ProductProvider","children","_s","categories","setCategories","products","setProducts","loading","setLoading","error","setError","fetchProducts","response","fetch","ok","Error","data","json","err","message","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useProduct","_s2","$RefreshReg$"],"sources":["D:/Reactjs/rainwear-shop/frontend/src/services/productService.js"],"sourcesContent":["import { createContext, useContext, useState, useEffect } from 'react';\r\n\r\n// Tạo Context cho ProductService\r\nconst ProductContext = createContext();\r\n\r\n// Provider quản lý sản phẩm\r\nexport const ProductProvider = ({ children }) => {\r\n  const [categories, setCategories] = useState({}); // Chứa tất cả các danh mục sản phẩm từ API\r\n  const [products, setProducts] = useState({}); // Chứa tất cả sản phẩm từ tất cả danh mục\r\n  const [loading, setLoading] = useState(true);  // Đang tải dữ liệu\r\n  const [error, setError] = useState(null);      // Lỗi khi gọi API\r\n\r\n  // Lấy danh sách sản phẩm từ API backend\r\n  useEffect(() => {\r\n    const fetchProducts = async () => {\r\n      try {\r\n        setLoading(true);\r\n        setError(null);\r\n\r\n        const response = await fetch('http://localhost:5000/api/products'); // URL API sản phẩm\r\n        if (!response.ok) {\r\n          throw new Error('Không thể tải danh sách sản phẩm.');\r\n        }\r\n        const data = await response.json();\r\n\r\n        setCategories(data);  // Lưu các danh mục vào trạng thái categories\r\n        setProducts(data);    // Lưu sản phẩm vào trạng thái products\r\n      } catch (err) {\r\n        setError(err.message || 'Không thể tải danh sách sản phẩm.'); // Nếu có lỗi, hiển thị thông báo lỗi\r\n      } finally {\r\n        setLoading(false);  // Xong việc, cập nhật trạng thái loading\r\n      }\r\n    };\r\n\r\n    fetchProducts();\r\n  }, []);  // useEffect chạy một lần khi component mount\r\n\r\n  return (\r\n    <ProductContext.Provider value={{ products, categories, loading, error }}>\r\n      {children}\r\n    </ProductContext.Provider>\r\n  );\r\n};\r\n\r\n// Custom hook để sử dụng ProductContext\r\nexport const useProduct = () => {\r\n  return useContext(ProductContext);\r\n};\r\n"],"mappings":";;;AAAA,SAASA,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;;AAEtE;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,cAAc,gBAAGN,aAAa,CAAC,CAAC;;AAEtC;AACA,OAAO,MAAMO,eAAe,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC/C,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGT,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EAClD,MAAM,CAACU,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EAC9C,MAAM,CAACY,OAAO,EAAEC,UAAU,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAE;EAC/C,MAAM,CAACc,KAAK,EAAEC,QAAQ,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAM;;EAE/C;EACAC,SAAS,CAAC,MAAM;IACd,MAAMe,aAAa,GAAG,MAAAA,CAAA,KAAY;MAChC,IAAI;QACFH,UAAU,CAAC,IAAI,CAAC;QAChBE,QAAQ,CAAC,IAAI,CAAC;QAEd,MAAME,QAAQ,GAAG,MAAMC,KAAK,CAAC,oCAAoC,CAAC,CAAC,CAAC;QACpE,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;UAChB,MAAM,IAAIC,KAAK,CAAC,mCAAmC,CAAC;QACtD;QACA,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;QAElCb,aAAa,CAACY,IAAI,CAAC,CAAC,CAAE;QACtBV,WAAW,CAACU,IAAI,CAAC,CAAC,CAAI;MACxB,CAAC,CAAC,OAAOE,GAAG,EAAE;QACZR,QAAQ,CAACQ,GAAG,CAACC,OAAO,IAAI,mCAAmC,CAAC,CAAC,CAAC;MAChE,CAAC,SAAS;QACRX,UAAU,CAAC,KAAK,CAAC,CAAC,CAAE;MACtB;IACF,CAAC;IAEDG,aAAa,CAAC,CAAC;EACjB,CAAC,EAAE,EAAE,CAAC,CAAC,CAAE;;EAET,oBACEb,OAAA,CAACC,cAAc,CAACqB,QAAQ;IAACC,KAAK,EAAE;MAAEhB,QAAQ;MAAEF,UAAU;MAAEI,OAAO;MAAEE;IAAM,CAAE;IAAAR,QAAA,EACtEA;EAAQ;IAAAqB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACc,CAAC;AAE9B,CAAC;;AAED;AAAAvB,EAAA,CAtCaF,eAAe;AAAA0B,EAAA,GAAf1B,eAAe;AAuC5B,OAAO,MAAM2B,UAAU,GAAGA,CAAA,KAAM;EAAAC,GAAA;EAC9B,OAAOlC,UAAU,CAACK,cAAc,CAAC;AACnC,CAAC;AAAC6B,GAAA,CAFWD,UAAU;AAAA,IAAAD,EAAA;AAAAG,YAAA,CAAAH,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}